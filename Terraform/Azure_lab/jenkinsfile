pipeline {
    agent any

    stages {
        stage('Setup Terraform') {
            steps {
                // Instala Terraform en un directorio accesible para el usuario Jenkins.
                sh '''
                curl -LO https://releases.hashicorp.com/terraform/1.9.3/terraform_1.9.3_linux_amd64.zip
                unzip terraform_1.9.3_linux_amd64.zip
                mkdir -p $HOME/terraform
                mv terraform $HOME/terraform/
                export PATH=$PATH:$HOME/terraform
                terraform --version
                '''
            }
        }

        stage('Terraform Init') {
            steps {
                // Inicializa Terraform en el directorio del proyecto.
                dir('Terraform/Azure_lab') {
                    sh '''
                    export PATH=$PATH:$HOME/terraform
                    terraform init
                    '''
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                // Aplica los cambios planificados de Terraform.
                dir('Terraform/Azure_lab') {
                    sh '''
                    export PATH=$PATH:$HOME/terraform
                    terraform apply -auto-approve
                    '''
                }
            }
        }

        stage('Wait') {
            steps {
                // Espera para comprobar el resultado.
                sh 'sleep 10'
            }
        }

        stage('Terraform Destroy') {
            steps {
                // Destruye los recursos creados por Terraform.
                dir('Terraform/Azure_lab') {
                    sh '''
                    export PATH=$PATH:$HOME/terraform
                    terraform destroy -auto-approve
                    '''
                }
            }
        }
    }

    post {
        always {
            // Limpia el espacio de trabajo después de la ejecución.
            cleanWs()
        }
    }
}
